function Pupil=PupilBoundary(A)if ndims(A)>2    A= rgb2gray(A);end%figure, imshow(A);v=25;C=(A<=v);%figure,imshow(C);function B=binarize(A)  [fr,v]=hist(A(:),10);  B=(A<=v(1));  %figure, imshow(B)endfunction%% BinarizationB=binarize(A);%% Isolationbw=bwconncomp(B,8) %%visualizing each area with different colorlm=labelmatrix(bw);rgb = label2rgb(lm,'spring',[0 0 0]);%figure, imshow(rgb)candidate_pupil = regionprops(bw,'Area', 'Eccentricity','Centroid','BoundingBox');%% Look for the best candidatemaxArea = 0;for i = 1 : length(candidate_pupil)  if(candidate_pupil(i).Area > maxArea) && (candidate_pupil(i).Eccentricity <= 0.7)    maxArea = candidate_pupil(i).Area;    m = i;  endend%% Return centroid and radiusPupil.Cx=round(candidate_pupil(m).Centroid(1));Pupil.Cy=round(candidate_pupil(m).Centroid(2));Pupil.R=round(sqrt(candidate_pupil(m).Area/pi));endfunction